<?xml version="1.0" encoding="UTF-8"?>
<beans:beans xmlns="http://www.springframework.org/schema/security"
	xmlns:context="http://www.springframework.org/schema/context"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xmlns:beans="http://www.springframework.org/schema/beans"
	xsi:schemaLocation="http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans.xsd
		http://www.springframework.org/schema/security http://www.springframework.org/schema/security/spring-security.xsd
		http://www.springframework.org/schema/context http://www.springframework.org/schema/context/spring-context.xsd">
		
		
		<context:component-scan base-package="com.prj.Culture.security" use-default-filters="false"> 
		<context:include-filter expression="org.springframework.stereotype.Service" type="annotation" /> 
			<context:include-filter expression="org.springframework.stereotype.Repository" type="annotation" /> 
		</context:component-scan>


	 <http auto-config="true" use-expressions="true">
	 
      <intercept-url pattern="/mypage" access="hasRole('ROLE_USER')"/>
	  <intercept-url pattern="/mypage*" access="hasRole('ROLE_USER')"/>
	  <intercept-url pattern="/board/**" access="permitAll"/>
	  <!-- <intercept-url pattern="/board/**" access="hasAnyRole('ROLE_USER','ROLE_ADMIN','ROLE_SUPERADMIN')"/> -->
	  <intercept-url pattern="/member/**" access="hasAnyRole('ROLE_SUPERADMIN')"/>
	   <intercept-url pattern="/" access="permitAll"/>
       <intercept-url pattern="/**" access="permitAll"/>
	 
	
	
<form-login 
		login-page="/signin" 
		username-parameter="user_id" 
		password-parameter="password" 
		login-processing-url="/j_spring_security_check"
		authentication-failure-url="/signin?error=true"
		authentication-success-handler-ref="signinSuccessHandler" 
		authentication-failure-handler-ref="signinFailureHandler"
		default-target-url="/" 
		always-use-default-target="false" />
		
		<logout 
		invalidate-session="true" 
		logout-success-url="/" 
		logout-url="/signout" 
		/> 
		 
</http>

	<beans:bean id="signinSuccessHandler" class="com.prj.Culture.security.model.SigninSuccessHandler" /> 
	<beans:bean id="signinFailureHandler" class="com.prj.Culture.security.model.SigninFailureHandler"> 
  		<beans:property name="defaultFailureUrl" value="/signin?error=true" /> 
	</beans:bean>

		
	 <beans:bean id="encoder" class="org.springframework.security.authentication.encoding.ShaPasswordEncoder" /> 
	 <beans:bean id="saltSource" class="org.springframework.security.authentication.dao.ReflectionSaltSource"> 
	 	<beans:property name="userPropertyToUse" value="username" /> 
	 </beans:bean>

	
	 <beans:bean id="bcryptPasswordEncoder" class="org.springframework.security.crypto.bcrypt.BCryptPasswordEncoder" />  



	<authentication-manager>
	      <authentication-provider ref="customAuthenticationProvider"/>
	     <!--  <authentication-provider user-service-ref="userService"> 
	        <password-encoder ref="bcryptEncoder" /> -->
	      <!-- <authentication-provider user-service-ref="customAuthenticationProvider"> --> 
	       <!--  <password-encoder ref="encoder"> 
	          <salt-source ref="saltSource" /> 
	        </password-encoder>  -->
	      <!-- </authentication-provider> -->
	</authentication-manager>
	
	<beans:bean id="customAuthenticationProvider" class="com.prj.Culture.security.model.CustomAuthenticationProvider"/>  
    <!-- <beans:bean id="passwordEncoderMake" class="org.springframework.security.crypto.bcrypt.BCryptPasswordEncoder"/> -->
  
</beans:beans>
